// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyApi;

#nullable disable

namespace l2.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MyApi.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Ladarius Douglas"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Fletcher Cormier"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Eleonore Luettgen"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Nona Kovacek"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Dino Lubowitz"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Jazmyne Reichel"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Franco Friesen"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Carlee Schultz"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Katlyn Roberts"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Demarcus Koelpin"
                        });
                });

            modelBuilder.Entity("MyApi.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 7,
                            ISBN = "935-9-89-148103-0",
                            Title = "Numquam eius a velit porro."
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 4,
                            ISBN = "488-7-09-056543-9",
                            Title = "Minus dolores dignissimos."
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 3,
                            ISBN = "082-6-64-577539-1",
                            Title = "Culpa facilis velit delectus aliquid libero sed error aut consequatur."
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 2,
                            ISBN = "634-9-67-179393-0",
                            Title = "Aut aliquid quia culpa beatae quas dolores."
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 7,
                            ISBN = "414-4-32-988918-2",
                            Title = "Voluptas aut eos pariatur expedita non necessitatibus et libero."
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 7,
                            ISBN = "053-4-28-977854-3",
                            Title = "Temporibus similique alias animi doloremque maiores illum veniam commodi."
                        },
                        new
                        {
                            Id = 7,
                            AuthorId = 4,
                            ISBN = "963-3-00-225668-0",
                            Title = "Cumque voluptatem sed dolores aut reiciendis."
                        },
                        new
                        {
                            Id = 8,
                            AuthorId = 2,
                            ISBN = "348-5-97-831318-9",
                            Title = "Eveniet sed in perferendis reiciendis totam sed velit odit."
                        },
                        new
                        {
                            Id = 9,
                            AuthorId = 3,
                            ISBN = "186-2-36-875415-8",
                            Title = "Omnis porro odio neque."
                        },
                        new
                        {
                            Id = 10,
                            AuthorId = 10,
                            ISBN = "883-6-62-994422-0",
                            Title = "Reiciendis est velit expedita eum."
                        },
                        new
                        {
                            Id = 11,
                            AuthorId = 1,
                            ISBN = "193-8-08-366155-0",
                            Title = "Ut nam amet officia voluptates."
                        },
                        new
                        {
                            Id = 12,
                            AuthorId = 8,
                            ISBN = "783-1-28-489034-6",
                            Title = "Ullam perspiciatis aut qui beatae."
                        },
                        new
                        {
                            Id = 13,
                            AuthorId = 6,
                            ISBN = "823-2-86-196966-6",
                            Title = "Hic dolores corrupti dolorum consequatur."
                        },
                        new
                        {
                            Id = 14,
                            AuthorId = 4,
                            ISBN = "135-7-68-193738-0",
                            Title = "Ut ut consectetur laborum."
                        },
                        new
                        {
                            Id = 15,
                            AuthorId = 5,
                            ISBN = "936-8-15-043844-3",
                            Title = "Quia laudantium provident ratione quis provident cum molestias sit."
                        },
                        new
                        {
                            Id = 16,
                            AuthorId = 2,
                            ISBN = "283-7-73-904838-2",
                            Title = "Iure nihil maxime aut sed sit consectetur harum."
                        },
                        new
                        {
                            Id = 17,
                            AuthorId = 8,
                            ISBN = "193-8-98-757738-7",
                            Title = "Pariatur voluptas facere non et."
                        },
                        new
                        {
                            Id = 18,
                            AuthorId = 5,
                            ISBN = "795-0-64-138144-6",
                            Title = "Asperiores quibusdam illum veniam perferendis in."
                        },
                        new
                        {
                            Id = 19,
                            AuthorId = 2,
                            ISBN = "326-5-41-583094-9",
                            Title = "Laudantium totam possimus rerum rerum."
                        },
                        new
                        {
                            Id = 20,
                            AuthorId = 1,
                            ISBN = "186-8-40-205303-3",
                            Title = "Sapiente quo repellendus quia odio natus."
                        },
                        new
                        {
                            Id = 21,
                            AuthorId = 2,
                            ISBN = "081-9-45-036644-0",
                            Title = "Veniam earum qui perspiciatis at eum."
                        },
                        new
                        {
                            Id = 22,
                            AuthorId = 2,
                            ISBN = "778-0-50-868175-1",
                            Title = "Aut minus sit et quis facere."
                        },
                        new
                        {
                            Id = 23,
                            AuthorId = 5,
                            ISBN = "426-9-66-929022-5",
                            Title = "Molestias accusamus sapiente."
                        },
                        new
                        {
                            Id = 24,
                            AuthorId = 1,
                            ISBN = "167-4-68-993580-6",
                            Title = "Harum voluptatem quia veniam repudiandae rerum iste."
                        },
                        new
                        {
                            Id = 25,
                            AuthorId = 10,
                            ISBN = "120-7-46-620589-2",
                            Title = "Necessitatibus architecto voluptatem."
                        },
                        new
                        {
                            Id = 26,
                            AuthorId = 4,
                            ISBN = "119-0-39-773584-5",
                            Title = "Ut accusantium alias."
                        },
                        new
                        {
                            Id = 27,
                            AuthorId = 8,
                            ISBN = "432-0-83-831429-0",
                            Title = "Voluptatem quibusdam optio."
                        },
                        new
                        {
                            Id = 28,
                            AuthorId = 3,
                            ISBN = "208-1-06-314595-8",
                            Title = "Veritatis quisquam et."
                        },
                        new
                        {
                            Id = 29,
                            AuthorId = 7,
                            ISBN = "136-2-08-344414-5",
                            Title = "Voluptatem odio facilis qui."
                        },
                        new
                        {
                            Id = 30,
                            AuthorId = 5,
                            ISBN = "367-7-92-365077-2",
                            Title = "Qui omnis quo quia."
                        });
                });

            modelBuilder.Entity("MyApi.Models.Collection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Collections");
                });

            modelBuilder.Entity("MyApi.Models.CollectionBook", b =>
                {
                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("CollectionId")
                        .HasColumnType("int");

                    b.Property<int?>("NumberInSeries")
                        .HasColumnType("int");

                    b.HasKey("BookId", "CollectionId");

                    b.HasIndex("CollectionId");

                    b.ToTable("CollectionBook");
                });

            modelBuilder.Entity("MyApi.Models.Book", b =>
                {
                    b.HasOne("MyApi.Models.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("MyApi.Models.CollectionBook", b =>
                {
                    b.HasOne("MyApi.Models.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyApi.Models.Collection", "Collection")
                        .WithMany()
                        .HasForeignKey("CollectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Collection");
                });

            modelBuilder.Entity("MyApi.Models.Author", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
